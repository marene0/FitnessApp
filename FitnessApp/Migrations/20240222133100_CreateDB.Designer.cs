// <auto-generated />
using System;
using FitnessApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitnessApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240222133100_CreateDB")]
    partial class CreateDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FitnessApp.Model.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseId"));

                    b.Property<int>("CaloriesLost")
                        .HasColumnType("int");

                    b.Property<string>("Complexity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExerciseWorkoutAdminSetId")
                        .HasColumnType("int");

                    b.Property<int>("ExercisesWorkoutId")
                        .HasColumnType("int");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseId");

                    b.HasIndex("ExerciseWorkoutAdminSetId");

                    b.HasIndex("ExercisesWorkoutId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("FitnessApp.Model.ExerciseWorkoutAdminSet", b =>
                {
                    b.Property<int>("ExerciseWorkoutAdminSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseWorkoutAdminSetId"));

                    b.Property<int>("WorkoutAdminSetsWorkoutAdminSetId")
                        .HasColumnType("int");

                    b.HasKey("ExerciseWorkoutAdminSetId");

                    b.HasIndex("WorkoutAdminSetsWorkoutAdminSetId");

                    b.ToTable("ExerciseWorkoutAdminSets");
                });

            modelBuilder.Entity("FitnessApp.Model.ExercisesWorkout", b =>
                {
                    b.Property<int>("ExercisesWorkoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExercisesWorkoutId"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.HasKey("ExercisesWorkoutId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("ExercisesWorkouts");
                });

            modelBuilder.Entity("FitnessApp.Model.Goals", b =>
                {
                    b.Property<int>("GoalsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GoalsId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExercisesExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GoalsId");

                    b.HasIndex("ExercisesExerciseId");

                    b.HasIndex("UserId");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("FitnessApp.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PASSWORD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FitnessApp.Model.Workout", b =>
                {
                    b.Property<int>("WorkoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkoutId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsersUserId")
                        .HasColumnType("int");

                    b.Property<string>("WorkoutName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkoutId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("FitnessApp.Model.WorkoutAdminSet", b =>
                {
                    b.Property<int>("WorkoutAdminSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkoutAdminSetId"));

                    b.Property<int>("SetName")
                        .HasColumnType("int");

                    b.HasKey("WorkoutAdminSetId");

                    b.ToTable("WorkoutAdminSets");
                });

            modelBuilder.Entity("FitnessApp.Model.Exercise", b =>
                {
                    b.HasOne("FitnessApp.Model.ExerciseWorkoutAdminSet", null)
                        .WithMany("Exercises")
                        .HasForeignKey("ExerciseWorkoutAdminSetId");

                    b.HasOne("FitnessApp.Model.ExercisesWorkout", "ExercisesWorkout")
                        .WithMany("Exercises")
                        .HasForeignKey("ExercisesWorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExercisesWorkout");
                });

            modelBuilder.Entity("FitnessApp.Model.ExerciseWorkoutAdminSet", b =>
                {
                    b.HasOne("FitnessApp.Model.WorkoutAdminSet", "WorkoutAdminSets")
                        .WithMany("ExerciseWorkoutAdminSets")
                        .HasForeignKey("WorkoutAdminSetsWorkoutAdminSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutAdminSets");
                });

            modelBuilder.Entity("FitnessApp.Model.ExercisesWorkout", b =>
                {
                    b.HasOne("FitnessApp.Model.Workout", "Workout")
                        .WithMany("ExercisesWorkout")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("FitnessApp.Model.Goals", b =>
                {
                    b.HasOne("FitnessApp.Model.Exercise", "Exercises")
                        .WithMany("Goals")
                        .HasForeignKey("ExercisesExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnessApp.Model.User", "User")
                        .WithMany("Goals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Exercises");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessApp.Model.Workout", b =>
                {
                    b.HasOne("FitnessApp.Model.User", "Users")
                        .WithMany("Workouts")
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("FitnessApp.Model.Exercise", b =>
                {
                    b.Navigation("Goals");
                });

            modelBuilder.Entity("FitnessApp.Model.ExerciseWorkoutAdminSet", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("FitnessApp.Model.ExercisesWorkout", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("FitnessApp.Model.User", b =>
                {
                    b.Navigation("Goals");

                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("FitnessApp.Model.Workout", b =>
                {
                    b.Navigation("ExercisesWorkout");
                });

            modelBuilder.Entity("FitnessApp.Model.WorkoutAdminSet", b =>
                {
                    b.Navigation("ExerciseWorkoutAdminSets");
                });
#pragma warning restore 612, 618
        }
    }
}
